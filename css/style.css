html    {
    font-size: 20px;
}
::selection {
    background-color: rgba(255, 255, 255, 0);
    color: rgb(0, 0, 0);
}
.view::selection {
    background-color: black;
    color: white;
    text-shadow: 1px 1px  rgba(24, 209, 255, 0.712);
}
.container {
    background-image: linear-gradient( rgb(72, 161, 189), gray);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

.flex-container {
    border: 1px solid rgb(47, 47, 47);
    border-radius: 10px;
    box-shadow: inset 0 0 2px 4px rgb(255, 255, 255), 0 0 13px rgba(255, 255, 255, 0.623);
    background-color: rgba(245, 245, 245, 0.692);
    display: flex;
    flex-direction: column;
    gap: 5px;
    padding: 5px;
    flex-basis: 450px;
}
/* ================================= */
.view {
    flex: 1 1 120px;
    text-align: end;
    font-size: 6rem;
    border: 2px solid rgba(0, 137, 172, 0.472);
    border-radius: 5px 5px 0 0;
    box-shadow: inset 0 0 30px 2px rgba(69, 168, 224, 0.603);
}
.view::after {
    content: "";
    height: 6rem;
    width: 0.2rem;
    display: inline-block;
    background-color: rgba(14, 12, 41, 0.822);
    border-radius: 10px;
    position: relative;
    top: 0.5rem;

    animation-name: stick;
    animation-duration: 0.8s;
    animation-iteration-count: infinite;
}
/* ============================== */
.g_operators {
    display: flex;
    align-items: center;
}
.g_operators > button {
    flex: 1 1;
    font-size: 2.7rem;
    text-align: center;
    font-weight: bold;
}
.g_operators > button:nth-child(2) {
    height: 3.4rem;
}

.g_operators > .operator {
    border: 2px solid rgba(182, 180, 180, 0.733);
    border-radius: 5px;
    background-color: rgba(228, 250, 255, 0.363);
    cursor: pointer;
    transition: 0.7s;
}
.g_operators > .operator:active {
    background-color: rgba(45, 213, 255, 0.568);
    border: 2px solid rgba(105, 225, 255, 0.472);
    border-radius: 5px;
    transition: none;
    color: cornsilk;
}


/* ============================== */

.g_numbers {
    display: flex;
    flex-direction: column;
    font-size: 3rem;
}
.g_numbers > .numb_container:first-child {
    order: 0;
}
.g_numbers > .numb_container:nth-child(2){
    order: -1;
}
.g_numbers > .numb_container:nth-child(3){
    order: -2;
}

/* ============================= */
.numb_container > .number {
    border: 2px solid rgba(182, 180, 180, 0.733);
    border-radius: 5px;
    background-color: rgba(228, 250, 255, 0.363);
    cursor: pointer;
    transition: 0.7s;
    line-height: 3.1rem;
}
.numb_container > .number:active  {
    background-color: rgba(45, 213, 255, 0.568);
    border: 2px solid rgba(105, 225, 255, 0.472);
    transition: none;
    color: cornsilk;
    border-radius: 5px;
}

.numb_container > .equals{
    text-align: center;
    border: 2px solid rgba(182, 180, 180, 0.733);
    border-radius: 5px;
    background-color: rgba(228, 250, 255, 0.363);
    transition: 0.7s;
    cursor: pointer;
    font-weight: bold;
    line-height: 3.1rem;
    flex: 1 1;
}
.numb_container > .equals:active {
    background-color: rgba(45, 213, 255, 0.568);
    border: 2px solid rgba(105, 225, 255, 0.472);
    transition: none;
    color: cornsilk;
    border-radius: 5px;
}
/* ================================== */
.g_numbers > .numb_container:nth-child(4) > .number:nth-child(2){
    padding-bottom: 5px;
}

.numb_container {
    display: flex;
}

.numb_container > .number {
    flex: 1 1;
    text-align: center;
}

@media (max-width: 480px) {
    .container {
        background-image: linear-gradient( rgb(72, 161, 189), gray);
        min-height: 100vh;
        display: flex;
        justify-content: none;
        align-items: stretch ;
    }
    .view {
       padding-top: 15%;
       font-size: 4rem;
    }
    .view::after {
        height: 4rem;
        top: 0.7rem
    }
}
@media (max-height: 480px) {
    html {
        font-size: 10px;
    }
    .container {
        background-image: linear-gradient( rgb(72, 161, 189), gray);
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: stretch;
    }
    .flex-container {
        flex-basis: 0px;
    }
    .view {
        flex:1 1 0;
    }
    .g_buttons > button:nth-child(2) {
        height: 3.7rem;
    }
    .view::after {
        width: 0.3rem;
    }
}







@keyframes stick {
    from {opacity: 1;}
    to {opacity: 0;}
    75% {opacity: 1;}
}





/* ============================================== */
@media (min-width: 200px) and (max-width: 600px) {
    /* Свойства применяются в пределах от меньшего к большему. */
}

@media (orientation: portrait) {
    /* Если высота экрана больше ширины, свойство применяется */
}
@media (orientation: landscape) {
    /* Если ширина экрана больше высоты, свойство применяется */
}
@import url("main.css") (min-width:481px) and (max-width:768px); 
/* импортируем содержимое файла css, который предназначается для устройств с 
разрешением экрана, находящегося в диапозоне от 481 пикселей до 768 пикселей */


/*  320px — 480px: мобильные устройства;
    481px — 768px: планшеты;
    769px — 1024px: маленькие экраны, ноутбуки;
    1025px — 1200px: большие экраны;
    1201px и больше —  очень большие экраны, телевизоры. */

